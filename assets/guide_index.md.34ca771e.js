import{_ as e,c as o,o as n,N as t}from"./chunks/framework.b74c2b66.js";const m=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md"}'),a={name:"guide/index.md"},r=t('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p><code>gone</code>名字取自<code>go one</code>的缩写。是一款基于golang的轻量型Web框架。</p><p>说到golang的Web框架，最出名的便是<a href="https://github.com/gin-gonic/gin" target="_blank" rel="noreferrer">gin</a>啦。不得不说这款框架实在是太优秀了，我萌生“自己写一个web框架”的念头，正是我在看gin源码解析的时候。gin给了我很多的启发，以致我迫不及待想尝试一番，于是就有了gone。</p><p>gone是我(应)学(付)习(毕)golang(设)的产物，是我的一次自我挑战。如你所见，<code>go.mod</code>文件中空空如也，gone<strong>完全原生实现</strong>。当然为此我付出了惨重的代价，或许重复造轮子是个愚蠢的想法，但目的是学习嘛~不寒掺~</p>',4),c=[r];function i(_,d,s,g,p,l){return n(),o("div",null,c)}const f=e(a,[["render",i]]);export{m as __pageData,f as default};
